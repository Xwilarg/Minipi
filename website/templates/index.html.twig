{% extends 'base.html.twig' %}

{% block content %}
<div class="modal" id="modal-minipi">
    <div class="modal-background"></div>
    <div class="modal-card">
        <header class="modal-card-head">
            <p class="modal-card-title" id="modal-minipi-title"></p>
            <button class="delete" aria-label="close" id="modal-minipi-close"></button>
        </header>
        <section class="modal-card-body">
            <h3 class="subtitle">Likes</h3>
            <div id="modal-minipi-likes"></div>
            <h3 class="subtitle">Behaviors</h3>
            <div id="modal-minipi-behaviors"></div>
        </section>
    </div>
</div>
<div class="modal" id="modal-specials">
    <div class="modal-background"></div>
    <div class="modal-card">
        <header class="modal-card-head">
            <p class="modal-card-title" id="modal-specials-title"></p>
            <button class="delete" aria-label="close" id="modal-specials-close"></button>
        </header>
        <section class="modal-card-body" id="modal-specials-body">
            This minipi exists
        </section>
    </div>
</div>
<div class="container">
    <section class="hero is-info">
        <div class="hero-body">
        <p class="title">Minipis</p>
        <p class="subtitle">
            A minipi is a small robot-shaped being tasked with helping people with their task and duties<br>
            While there are a lot of them, they each have their own hobbies, dreams and quirks<br>
            Scroll down to learn all about them :)
        </p>
        </div>
    </section>
    <div class="article">
        <h2 class="title" id="minipis">Minipis</h2>
        <p>
            Minipis created by Pi in the context of her duty<br>
            <small>Since this is updated manually, this might be out of date</small>
        </p>
        <div class="grid mt-3">
        {% for m in minipi | reverse %}
        <div class="cell"><button class="button button-minipi" data-writtenBy="{{m.writtenBy}}" data-likes="{{m.likes}}" data-behaviors="{{m.behaviors}}">{{m.id}}</button></div>
        {% endfor %}
        </div>
    </div>
    <div class="article">
        <h2 class="title" id="specials">Specials</h2>
        <p>
            Specials minipi created outside of normal circumstances
        </p>
        <div class="grid mt-3">
        {% for key,value in specials %}
        <div class="cell"><button class="button button-special" {% if not value%}disabled{% endif %}>{{key}}</button></div>
        {% endfor %}
        </div>
    </div>
    <div class="article">
        <h2 class="title" id="backstory">Backstory</h2>
        <p>
            Minipis are made by an android named <a href="https://lore.katsis.net/embed.php?c=Pi" target="_blank">Pi</a>, which was tasked by <a href="https://lore.katsis.net/embed.php?c=Nano" target="_blank">Nano</a> to help the community and its people with their lives<br>
            Since answering to everyone demand is a huge task, she took the initiative to create small helpers called "minipi"<br>
            <br>
            Pi herself is a bit of an oddity among androids, while holding a pin as the others ones, she is only very weakly connected to the central server as the others are<br>
            Therefore to manage minipi she had to create her own server, allowing her to have a base for minipi's own pins<br>
            This server work by proxy to the main one, for each new minipi creating a very weak link to the main server<br>
            <br>
            Each minipi therefore reinforce this link Pi hold to the main server, allowing her to get closer to the ones of her kind<br>
            Along with that each minipi have their own goals, dreams and when one of them come upon fruition, this link significantly stronger
        </p>
    </div>
    <div class="article">
        <h2 class="title" id="glossary">Glossary</h2>
        <h3 class="subtitle">Emergency mode</h3>
        <p>
            Emergency mode is a special state where all the components of a minipi are disabled, except for her life core, battery and pin<br>
            This typically occur to preserve a minipi integrity and prevent her from hurting herself, either because an outside event or from an inner defect<br>
            This also allow her to keep a nearly-discharged battery for up to a dozen days<br>
            When this happen, all the volatile memory of the minipi is discarded and she will be totally unresponsive<br>
            <br>
            This can be observed when a minipi pin emit a soft red glow<br>
            In case of such an event, please only touch the minipi if she is in immediate danger and contact either Pi or another minipi<br>
            <br>
            This scenario usually occur in the following cases:
            <ul>
                <li>A minipi ran out of battery</li>
                <li>A shock forced a minipi to expel her battery</li>
                <li>A system violation was detected by the minipi Pi[OS]</li>
                <li>The minipi pi safety guard was triggered</li>
            </ul>
            A minipi is only able to be removed from this state by Pi, and is always followed by a deep maintenance
        </p>
        <h3 class="subtitle">Pin safety guard</h3>
        <p>
            The safety guard is a functionality attached to a minipi pin<br>
            When a minipi physical integrity is endagered or when its signal to the central server is too weak (meaning a minipi wandered too far away), the security is triggered<br>
            When that happen, the minipi is instantly transported in a receptacle area and her emergency mode is triggered
        </p>
        <h3 class="subtitle">Deep maintenance</h3>
        <p>
            Deep maintance is a process usually done after emergency mode to repair and recalibrate a minipi<br>
            It is a time-expensive maneuver that can only be done by Pi, and involve many hardware and software steps to repair structucal and internal defects<br>
            A deep maintenance also always involve changing the minipi emergency battery
        </p>
        <h3 class="subtitle">Soft maintenance</h3>
        <p>
            Soft maintenance are a kind of maintance done by minipis in Pi's house<br>
            It allow them to recalibrate their software and once started usually take a full day<br>
            It contains many steps such as recalibrating their internal clock, defragmenting their memory, testing their various sensors, refilling their coolant, comparing the integrity of their system to a reference database and updating it, etc…
        </p>
        <h3 class="subtitle">Daily maintenance</h3>
        <p>
            Daily maintenance are done each evening in Pi's house<br>
            They are usually done in parrallel of their battery charging, it is used by minipi to organize their memories and transfert data from their volatile to permanent memory
        </p>
        <h3 class="subtitle">Charging pod</h3>
        <p>
            A charging pod is a small container where a minipi lie down during their daily maintenance<br>
            Each minipi have their own charging pod, they also contains a small compartiment at the bottom that they use to store what they like
        </p>
        <h3 class="subtitle">Charging stations</h3>
        <p>
            Charging stations are little cabins that can be found in the street, they give a rest point to minipi and offer various services like an outlet allowing themselves to charge a bit, a map of the city so lost minipis can find their way back and are also used by various others services provided by minipis such as relay points for the <acronym title="MiniPi Delivery Service">MPDS</acronym><br>
            When a minipi enter emergency mode, others minipis will often carry her here, offering her a safe place until Pi's arrival
        </p>
    </div>
    <div class="article">
        <h2 class="title" id="language">Language</h2>
        Minipi language for a long time have been through as random babbling, but Pi was the first to explain that during all this time it was indeed a real language<br/>
        It is however only spoken, some minipi like to write but each of them have their own system which isn't standardized <br/>
        <br/>
        We usually romanized minipi language with a i for a short sound pi and o for a long one<br/>
        Along with that there are 3 existing accents, up, down and neutral which give us the following table:<br/>
        <table class="table">
            <thead>
                <tr>
                    <th></th>
                    <th>Up</th>
                    <th>Down</th>
                    <th>Neutral</th>
                </tr>
                <tr>
                    <td>i</td>
                    <td>ī</td>
                    <td>í</td>
                    <td>N/A</td>
                </tr>
                <tr>
                    <td>o</td>
                    <td>ō</td>
                    <td>ó</td>
                    <td>ò</td>
                </tr>
            </thead>
        </table>
        To facilitate reading with often add a p before the vowel as following:<br/>
        <code>pípōpó</code><br/>
        <br/>
        Wait in vocalization usually instill a word break<br/>
        <br/>
        Grammatically, sentences are done with the following structures:<br/>
        verb + noun + complements + (subject)<br/>
        Subject often being implied<br/>
        <br/>
        For example "Go fetch the water from the well" would be
        <ul>
            <li><code>pìpó</code>: to go and come back with, to alert someone</li>
            <li><code>pōpípí</code>: clean water</li>
            <li><code>pīpópīpò</code>: groundwater (imply well)</li>
            <li><code>pīpī</code>: you</li>
        </ul>
        Which gives<br/>
        <code>Pìpó pōpípí pīpópīpò (pīpī)</code><br/>
        <br/>
        It is good to know that word meaning changes depending of their location in a sentence and this pōpípí either mean "clean water" or "to wash, to remove dirt from something"<br/>
    </div>
    <div class="article">
        <h2 class="title" id="services">Services</h2>
        <h3 class="subtitle">Delivery System</h3>
        Thank you for considering the MPDS (MiniPi Delivery Service) for your packages<br>
        The <acronym title="MiniPi Delivery Service">MPDS</acronym> is a service to deliver your letters and parcels while being:
        <ul>
            <li>Free: as a community service, the <acronym title="MiniPi Delivery Service">MPDS</acronym> is and will remain free for all its citizens, you are however welcome to offer money to provide funds to its infrastructures</li>
            <li>Easy to access: Just let your package at your local minipi station and a minipi will take it when coming by</li>
            <li>Accessible to anyone: Even if you can't use WCC, you can still use the <acronym title="MiniPi Delivery Service">MPDS</acronym>!</li>
        </ul>

        <h4 class="subtitle">How to I receive packages?</h4>
        <strong>Standard delivery (大Batsu only)</strong><br>
        This is the most common type of delivery, packages will arrive at your closest minipi station and are kept there for 2 months before being sent back on the station where they were expedited from<br>
        Packages are let inside, please verify the name on a parcel before taking it<br>
        <br>
        <strong>Door to door delivery</strong><br>
        This service allow you to directly receive your package at your doorstep, delivery are usually a bit slower that way

        <h4 class="subtitle">How do I indicate the destination address?</h4>
        Mini-pi are very adaptive but use a different language than you and I, for this reason delivery instruction must follow a special format<br>
        <br>
        <strong>Standard delivery (大Batsu only)</strong><br>
        Please refer to the map on a minipi station to identify which symbols need to be written on the package depending of the destination sector<br>
        <br>
        <strong>Door to door delivery (大Batsu only)</strong><br>
        Please write down the sector in which the delivery location is, followed by a photo of the house taken from the street<br>
        <br>
        <strong>Ebereus delivery</strong><br>
        Ebereus packages need to be marked with the corresponding symbols, please refer to a minipi station to know what need to be written<br>
        The address itself can be written in plain letters

        <h4 class="subtitle">When will my package be delivered?</h4>
        Each morning, minipi go around their stations to check for new packages, however some stations are checked less often that the others, when at a station, please check the color of the <acronym title="MiniPi Delivery Service">MPDS</acronym> sticker:
        <ul>
            <li>Green: This station is verified every day</li>
            <li>Yellow: This station is verified every week</li>
            <li>Red: This station is verified every months</li>
        </ul>

        Once recovered delivery will begin<br>
        Mini-pi working only during day time, your package might be stored in another minipi station during the night<br>
        <br>
        Mini-pi must go through many obstacles to ensure your package is delivered, and thus sometimes your package might get lost on the way, if that happens no need to worry! A mini-pi investigation squad will be dispatched to find your package back, if for some reason it still can't be recovered, Pi herself will be dispatched

        <h4 class="subtitle">How can I help?</h4>
        The <acronym title="MiniPi Delivery Service">MPDS</acronym> is able to operate efficiantly thanks to people like you and helping minipi in their tasks is always welcome:<br>
        - Minipi sometimes struggle to climb hills with their trolley, when that happens you are welcome to help them to push it<br>
        - Minipi will sometimes come to you to attempt to locate specific locations, in that case please don't give complex instructions such as "take the 2nd turn left then right after the crosswalk" but please point them or show them the direction instead<br>

        <h4 class="subtitle">Standard equipement</h4>
        Mini pi are equiped with a little trolley, allowing them to push any parcel despite their size or weight

        <h4 class="subtitle">History</h4>
        <acronym title="MiniPi Delivery Service">MPDS</acronym> is a postal service created by Pi and managed by mini-pi \#43, even through there is no fixed employee, parcel delivery is part of a minipi communitary duty
    </div>
    <div class="article">
        <h2 class="title" id="specifications">Technical specifications</h2>
        <p>
            <small>These technical specifications are made after extensive observation and while they aim to be as accurate as possible, might contains inacurracies</small>
        </p>
        <p>
            A minipi is made of 2 main parts:
            - The head, which contains the captors, components for memory and decision making along with the ones that define the minipi as a being
            - The body, which contains components for energy management and her pin

            <h2 class="subtitle">Head</h2>
            <h3 class="subtitle">Life Core</h3>
            The life core is a component that define a minipi as a being, it acts as a blackbox and little is known about its inner working, apart from the fact that it contains Pi[OS] and that it's charged from Pi's server<br>
            As long as this component isn't damaged, a minipi can be repaired
            <h3 class="subtitle">Pi[OS]</h3>
            Contained inside the life code, Pi[OS] is what define the base of a minipi critical behaviors<br>
            The inner instructions are unknown but it contains rules so a minipi can protect herself, Pi and others minipis, along with instructions defining forbidden behaviors<br>
            <br>
            It is the primary layer of security around a minipi lifecore and is completly sealed from the outside, and only accessible to the minipi in a read-only mode, preventing any nefarious attack against it<br>
            However, since a minipi ability to judge what is good or bad is based on her reserved memory, her perception can still be altered<br>
            Once Pi[OS] detect such a violation, the minipi will enter emergency mode, disabling all her component except for her life core, battery and pin
            <h3 class="subtitle">Decision center</h3>
            Minipi decision center is a component allowing them to interact with their various others components and sensors to take decisions
            <h3 class="subtitle">Vision</h3>
            Minipi only have one eye off-centered on the left of their body, making them struggle to see things in 3 dimensions<br>
            Their vision spectrum is from 360 to 620nm
            <h3 class="subtitle">Communication</h3>
            Minipi are able to emit sounds, but are limited to the sound "pi"<br>
            Their vocalization system allow to pronounce strident /i/ sounds while opening their mouth produces a /p/ sounds, hence the /pi/ sound they produce<br/>
            They use variation of tones and durations to communicate between each other, a minipi voice being able to go from 150Hz to 1500Hz<br>
            They are able to hear from 30Hz to 40 000Hz
            <h3 class="subtitle">Clock</h3>
            Minipi have an internal clock, ticking at the same interval for all of them<br>
            It is mainly used to syncronise internal systems with each others, but minipis also can use it for various others tasks, like walking in unison
            <h3 class="subtitle">Exhaust pipe</h3>
            The minipi antenna act as an exhaust pipe, since their heat management is done with a special coolant, bubbles can sometimes be produces and released from there
            <h3 class="subtitle">Memory</h3>
            Minipi memory work in block of 1024KB, each block can be associated to a specific information<br>
            For this reason, minipi are usually better at keeping track of only a few different subjects<br>
            <h4 class="subtitle">Text blocks</h4>
            Text blocks are chunk of memory optimized to store basic information, they are optimized for very fast access
            <h4 class="subtitle">Image blocks</h4>
            Image blocks are chunk of memory optimized to store images, information there is usually highly compressed, asking for a minipi more time to access it
            <h4 class="subtitle">Links blocks</h4>
            Links are a small chunk of memory linking various blocks of image/text memory together
            <h4 class="subtitle">Decisional blocks</h4>
            Decisional blocks are a special kind of blocks only used by volatile memory<br>
            They store information about what the minipi is currently experiencing, working as a system of double buffering, allowing a minipi to store information to her volatile memory while she keeps accumulating new ones from her sensors and sending them to her decision center<br>
            <h4 class="subtitle">Volatile memory</h4>
            Volatile memory is a kind of memory made from [3] blocks of image, [6] blocks of text and [1] block of links used to temporary store information about their day<br>
            Each evening, minipi go back to their charging pod and will enter sleep mode, where their decision center will filter which data are purged and which are stored in permanent memory<br>
            <br>
            If a minipi run out of battery, she risks entering into emergency mode, eliminating all memory stored there
            <h4 class="subtitle">Permanent memory</h4>
            Minipi permanent memory allow them to keep data between days, that memory however slowly degrade with time and minipi will have to reassess their knowledge to maintain it<br>
            It is made of [1] block of link memory, [32] blocks of text memory and [10] blocks of image memory<br>
            Text memory is splitted as the following:
            <ul>
                <li>
                    Core [15]: Basic minipi knowledge, it contains information related to their basic education, such as how to intepret things, how to walk, how to manipulate objects, etc…<br>
                    This is usually half-filled when a minipi is bornt, but they are free to modify or complement it with their learning<br>
                    It also contains information on their duty, ways to effectively perform tasks and work alongside others minipis
                </li>
                <li>
                    Goals [2]: Where minipi store their current objectives and goals<br>
                    [1] block is usually used for their long-term dreams and [1] for for their main hobby<br>
                    Since there is only one block for hobby, most minipi don't have more than one
                </li>
                <li>
                    People [10]: Where minipi store information about others people, when someone is very important they can take up to a whole block<br>
                    However most of the time information about many people are stored inside one block, which sometimes cause minipi to mix them up<br>
                    Most of it is usually used to store informations about others minipis
                </li>
                <li>
                    Free [5]: Additional blocks that can be used by minipi however they want, usually combined with others categories above to extend their capacities in one of them
                </li>
            </ul>
            <br>
            Image memory is usually splitted between [20] blocks accumulating their knowledge (similar to the text core memory) and [10] free blocks
            <h4 class="subtitle">Read-only memory</h4>
            Read-only memory contains [1] block of link memory, [3] blocks of images and [17] blocks of text<br>
            Images blocks contains information allowing their to identify important people such as Pi or minipis, it also ways for them to recognize dangerous information or hazard they shouldn't approch (such as anomalies)<br>
            Text blocks containing information about what is a minipi, what is "good" and "bad", how to react in case of emergency and what is their goal as minipi<br>
            While these information let some leeway for interpretation, they also contains strong directives, preventing them to do anything that is clearly disallowed<br>
            <br>
            Contraty to core memory, these information don't let place for learning or evolving but state things that are immutable
            <h2 class="subtitle">Body</h2>
            <h3 class="subtitle">Battery</h3>
            Minipi uses rechargeable lithium-ion battery to power themselves<br>
            This battery is quite sensitive to external factor, if a minipi receive a strong shock, the battery will be ejected from a trap between their legs<br>
            When that happen, a bunch of coolant will be released at the same time, mitigating the risks of explosion and fire, and will force the minipi into emergency mode<br>
            <br>
            Minipi's battery are made to last to last around 30 hours and requires 10 hours of charging when empty, but may be drained quicker if the minipi do intenstive activities<br>
            <br>
            When the minipi battery run at 1%, the minipi will enter into emergency mode and the emergency battery will take the relay
            <br>
            <h3 class="subtitle">Emergency battery</h3>
            Emergency battery is a little lithium iron phosphate battery only active during emergency mode<br>
            It allow the minipi core functionalities to still be operational during that time
            <h3 class="subtitle">Tail</h3>
            Minipi have a tail primarly used to charge themselves, either in their charging pod or at minipi stations that are placed in the street<br>
            It is also used during maintenances to transfert data
            <h3 class="subtitle">Receiver pin</h3>
            Automatically trigger safety guard protocol when a minipi life is endangered
        </p>
    </div>
    <div id="gallery">
        <img src="img/minipi.png" data-author="Fractal"/>
        <img src="img/Pi.png" data-author="Fractal"/>
    </div>
</div>
{% endblock %}